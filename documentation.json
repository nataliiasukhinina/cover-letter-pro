{
    "pipes": [],
    "interfaces": [
        {
            "name": "AppFeature",
            "id": "interface-AppFeature-f5a0315417ca20a011b816c70d6070f55109800315224db92baf2bdd327b8a1705cf577f6fb71d24039163056258924a22ec5f61c662c9a2e1aa2f6604e0dbb6",
            "file": "src/app/core/models/AppFeature.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface AppFeature {\n  header: string;\n  subHeader: string;\n  description: string;\n  footnote?: string;\n}\n",
            "properties": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "footnote",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "header",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "subHeader",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "LoginHelpState",
            "id": "interface-LoginHelpState-bde0f285fc4e0cef0a91fb129cf4fe1902d961308ae055d030e51bfd1af6f528d29a58a8303ec093d69164abdf803d973a95f58f51a20fd15db79bfb6103b526",
            "file": "src/app/public/login-help/state/login-help.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import * as AppState from '../../../state/app.state';\n\nexport interface State extends AppState.State {\n  loginHelp: LoginHelpState;\n}\n\nexport interface LoginHelpState {\n  showChatHistory: boolean;\n}\n",
            "properties": [
                {
                    "name": "showChatHistory",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "State",
            "id": "interface-State-d2f2522cc578770405e841ce8992f620c11d61878c02fc62ade0a42b38b751376ed1c8d729f43a3f29eb8c7508699601b205d7d4eb47f3f4eb0f406a92271d95",
            "file": "src/app/state/app.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface State {\n\n}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "extends": []
        },
        {
            "name": "State",
            "id": "interface-State-bde0f285fc4e0cef0a91fb129cf4fe1902d961308ae055d030e51bfd1af6f528d29a58a8303ec093d69164abdf803d973a95f58f51a20fd15db79bfb6103b526-1",
            "file": "src/app/public/login-help/state/login-help.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import * as AppState from '../../../state/app.state';\n\nexport interface State extends AppState.State {\n  loginHelp: LoginHelpState;\n}\n\nexport interface LoginHelpState {\n  showChatHistory: boolean;\n}\n",
            "properties": [
                {
                    "name": "loginHelp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "LoginHelpState",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [
                "AppState.State"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "State-1"
        },
        {
            "name": "User",
            "id": "interface-User-d4821beac0e4a852e513391b7470981c4353fdd95a18628bb68136c8695b489ee15b926e2e5031bc26cf30e1508e0a362c3ee13a06734702b4d15af140e485d5",
            "file": "src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n  name: string;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "User",
            "id": "interface-User-ebddded046843f0b0376020452b018287b31548d878349a17d3322f7dceec29657a05d32127b73523698cbde633173aeb4aeacf59e7a0e5f27f9a5fb07bcb1af-1",
            "file": "src/app/core/models/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n  username: string;\n  id: string;\n}\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "User-1"
        }
    ],
    "injectables": [
        {
            "name": "AuthService",
            "id": "injectable-AuthService-3361b3c8a066392f70bc334aca13bb071ad710023853919a8c8187d715b1b65fa3356d10e8babe6cd9a3764a603be3f6f0790ac5050f08c2af28b635db87647c",
            "file": "src/app/core/services/auth.service.ts",
            "properties": [
                {
                    "name": "loggedIn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methods": [
                {
                    "name": "confirmSignUp",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "code",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nconfirm code",
                    "description": "<p>confirm code</p>\n",
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "code",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getUser",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isAuthenticated",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nget authenticated state",
                    "description": "<p>get authenticated state</p>\n"
                },
                {
                    "name": "signIn",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nsignin",
                    "description": "<p>signin</p>\n",
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "signOut",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nsignout",
                    "description": "<p>signout</p>\n"
                },
                {
                    "name": "signUp",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nsignup",
                    "description": "<p>signup</p>\n",
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { fromPromise } from 'rxjs/internal/observable/innerFrom';\nimport { map, tap, catchError } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { Amplify } from 'aws-amplify';\nimport { environment } from '../../../environments/environment';\nimport {\n  signUp,\n  signIn,\n  confirmSignUp,\n  getCurrentUser,\n  signOut,\n} from 'aws-amplify/auth';\n\n@Injectable()\nexport class AuthService {\n  loggedIn: BehaviorSubject<boolean>;\n\n  constructor(private router: Router) {\n    Amplify.configure(environment.amplify);\n    this.loggedIn = new BehaviorSubject<boolean>(false);\n  }\n\n  /** signup */\n  signUp(email: string, password: string): Observable<any> {\n    return fromPromise(signUp({ username: email, password: password }));\n  }\n\n  /** confirm code */\n  confirmSignUp(email: string, code: string): Observable<any> {\n    return fromPromise(\n      confirmSignUp({ username: email, confirmationCode: code }),\n    );\n  }\n\n  /** signin */\n  signIn(email: string, password: string): Observable<any> {\n    return fromPromise(signIn({ username: email, password: password })).pipe(\n      catchError((error) => {\n        console.log(error);\n        this.loggedIn.next(false);\n        return of(false);\n      }),\n      tap(() => this.loggedIn.next(true)),\n    );\n  }\n\n  /** get authenticated state */\n  isAuthenticated(): Observable<boolean> {\n    return fromPromise(getCurrentUser()).pipe(\n      map((result) => {\n        this.loggedIn.next(true);\n        return true;\n      }),\n      catchError((error) => {\n        console.log(error);\n        this.loggedIn.next(false);\n        return of(false);\n      }),\n    );\n  }\n\n  /** signout */\n  signOut() {\n    fromPromise(signOut()).subscribe(\n      (result) => {\n        this.loggedIn.next(false);\n        this.router.navigate(['/login']);\n      },\n      (error) => console.log(error),\n    );\n  }\n\n  getUser() {\n    return fromPromise(getCurrentUser());\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "OpenAiService",
            "id": "injectable-OpenAiService-75df301d378e448675ad3280d28276cb577adfa7a9939373c789622803448d1a46b29d53165e50ba473ce51da98efece3ea80b2e8e349749cb05efa2b3489c5f",
            "file": "src/app/core/services/open-ai.service.ts",
            "properties": [
                {
                    "name": "baseUrl",
                    "defaultValue": "'https://api.openai.com/v1'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methods": [
                {
                    "name": "getCompletion",
                    "args": [
                        {
                            "name": "body",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "body",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OpenAiService {\n\n  baseUrl = 'https://api.openai.com/v1'\n\n  constructor(private httpClient: HttpClient) { }\n\n  getCompletion(body: any): Observable<any> {\n    console.log(body)\n    const url: string = `${this.baseUrl}/chat/completions`;\n    return this.httpClient.post(url, body);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [
        {
            "name": "OpenAiInterceptor",
            "id": "injectable-OpenAiInterceptor-b82955f87e6f3f863e03ade1543fc2f21e3eeb726be30f8ece554b094687464a2a3337cc39472bcecda1ffa6c3031be3d32c5057353d56fa5b384b2332d00a89",
            "file": "src/app/core/interceptors/open-ai.interceptor.ts",
            "properties": [],
            "methods": [
                {
                    "name": "intercept",
                    "args": [
                        {
                            "name": "httpRequest",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "httpRequest",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport {\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\nimport { secret } from '@aws-amplify/backend';\n\n@Injectable()\nexport class OpenAiInterceptor implements HttpInterceptor {\n  constructor() {}\n\n  intercept(httpRequest: HttpRequest<any>, next: HttpHandler) {\n    if (httpRequest.url.includes('https://api.openai.com/v1')) {\n      const openAiRequest: HttpRequest<any> = httpRequest.clone({\n        setHeaders: {\n          // @ts-ignore\n          Authorization: `Bearer ${secret('OpenAiApiKey')}`,\n          'OpenAI-Organization': environment.openAiOrganization,\n        },\n      });\n      return next.handle(openAiRequest);\n    } else {\n      return next.handle(httpRequest);\n    }\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "extends": [],
            "type": "interceptor"
        }
    ],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-c414373d8206002ef9ce1519212f6e395423d8c4586a4b07466f80b392965a37fec3d2786c376390b0dd4db73c3d6304c8cfd751637036cbe579ad57fb413ff9",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isLoggedIn",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "title",
                    "defaultValue": "'demo-app'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "user",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClickLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Subscription} from \"rxjs\";\nimport {AuthService} from \"./core/services/auth.service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  title = 'demo-app';\n  subscription!: Subscription;\n  isLoggedIn: boolean = false;\n  user: string = '';\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n    this.authService.loggedIn.subscribe(\n      (value: boolean) => {\n        this.isLoggedIn = value;\n        if(this.isLoggedIn) {\n          this.authService.getUser().subscribe(\n            (response) => {\n              this.user = response.username;\n            }\n          );\n        }\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  onClickLogout() {\n    this.authService.signOut();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<!--<amplify-authenticator>-->\n<!--  <ng-template-->\n<!--    amplifySlot=\"authenticated\"-->\n<!--    let-user=\"user\"-->\n<!--    let-signOut=\"signOut\"-->\n<!--  >-->\n<!--    <h1>Welcome {{ user.username }}!</h1>-->\n<!--    <button (click)=\"signOut()\">Sign Out</button>-->\n<!--    <router-outlet></router-outlet>-->\n<!--  </ng-template>-->\n<!--</amplify-authenticator>-->\n<div class=\"container my-5\">\n  <ng-container *ngIf=\"isLoggedIn\">\n    <div class=\"row\">\n      <div class=\"col-6 px-5\">\n        <h1 *ngIf=\"user\">Hi {{user}}</h1>\n      </div>\n      <div class=\"col-6 px-5\">\n        <button class=\"btn btn-secondary float-end\" (click)=\"onClickLogout()\">Sign Out</button>\n      </div>\n    </div>\n    <demo-navigation></demo-navigation>\n\n  </ng-container>\n  <router-outlet></router-outlet>\n</div>\n"
        },
        {
            "name": "AppFeaturesComponent",
            "id": "component-AppFeaturesComponent-69a49bc8b94c79a5ef72f011e43a037b6c446c7e0dee5f6990eac000a56227e977f36e0e233c0ee09341dc4861487f06bfcb0b69506792fc91383a18bf7bd3d3",
            "file": "src/app/core/components/app-features/app-features.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "demo-app-features",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app-features.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "appFeatures",
                    "defaultValue": "appFeaturesList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport {appFeaturesList} from \"./app-features.constants\";\n\n@Component({\n  selector: 'demo-app-features',\n  templateUrl: './app-features.component.html'\n})\nexport class AppFeaturesComponent {\n\n  appFeatures = appFeaturesList;\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"row justify-content-center mt-5\">\n  <div class=\"col-12 col-lg-6\">\n    <h2>Features and the tools used to create this app.</h2>\n\n    <div class=\"list-group\">\n      <div class=\"list-group-item list-group-item-action flex-column align-items-start\" *ngFor=\"let appFeature of appFeatures\">\n        <div class=\"d-flex w-100 justify-content-between\">\n          <h2 class=\"mb-1\">{{appFeature.header}}</h2>\n          <small>{{appFeature.subHeader}}</small>\n        </div>\n        <p class=\"mb-1\">{{appFeature.description}}</p>\n        <small>{{appFeature.footnote}}</small>\n      </div>\n    </div>\n\n  </div>\n</div>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-86e2311c54fbca7431c12e070d0fd5b0ebe343eec0553a392f182ba0e04a8f86613233d26ee47718fd0e7a65078f580c76a1fcc928ce55de81193d6618025bc4",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 798,
                            "end": 811,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 334,
                            "tagName": {
                                "pos": 799,
                                "end": 807,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 43,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 35,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 49,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  standalone: true,\n  imports: [CommonModule],\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 51
                    }
                }
            }
        },
        {
            "name": "CoverLetterComponent",
            "id": "component-CoverLetterComponent-1dca7a77eaab6c3853fb3c43a16b95be81022101f9c7506ca10bd2380dff59e0d9ccbc3242d249b80c7ed31706f8ef91be570991c9512411c43789ce5ebba3b0",
            "file": "src/app/core/components/cover-letter/cover-letter.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "demo-cover-letter",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./cover-letter.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "coverLetterForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "coverLetterText",
                    "defaultValue": "'Your cover letter will appear here.'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "loadingInProgress",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "getCoverLetter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "hasError",
                    "args": [
                        {
                            "name": "control",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "errorCode",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "control",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "errorCode",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "initCoverLetterForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {OpenAiService} from \"../../services/open-ai.service\";\n\n@Component({\n  selector: 'demo-cover-letter',\n  templateUrl: './cover-letter.component.html'\n})\nexport class CoverLetterComponent implements OnInit {\n\n  coverLetterForm!: FormGroup;\n  coverLetterText: string = 'Your cover letter will appear here.';\n  loadingInProgress: boolean = false;\n  constructor(private formBuilder: FormBuilder,\n              private openAiService: OpenAiService) {\n  }\n\n  ngOnInit(): void {\n    this.initCoverLetterForm();\n  }\n\n  initCoverLetterForm(): void {\n\n    this.coverLetterForm = this.formBuilder.group({\n      company: ['', Validators.compose([Validators.required, Validators.maxLength(25)])],\n      position: ['', Validators.compose([Validators.required, Validators.maxLength(25)])]\n    });\n\n  }\n\n  getCoverLetter(): void {\n    if(this.coverLetterForm.valid && !this.loadingInProgress) {\n      this.loadingInProgress = true;\n      const company = this.coverLetterForm.get('company')?.value;\n      const position = this.coverLetterForm.get('position')?.value;\n      const body = {\n        \"model\": \"gpt-3.5-turbo\",\n        \"messages\": [{\"role\": \"user\", \"content\": `Write cover letter for ${position} at ${company}`}],\n        \"max_tokens\": 500\n      }\n\n      this.openAiService.getCompletion(body).subscribe(\n        (response) => {\n          this.coverLetterText = response.choices[0].message.content\n        },\n        (error) => {\n          console.log(error);\n          this.coverLetterText = \"Sorry! Something went wrong. What a shame...\"\n          this.loadingInProgress = false;\n        },\n        () => {\n          this.loadingInProgress = false;\n        }\n      );\n    }\n\n  }\n\n  hasError(control: string, errorCode: string): boolean {\n    return !!(this.coverLetterForm.get(control)?.touched && this.coverLetterForm.get(control)?.hasError(errorCode));\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "openAiService",
                        "type": "OpenAiService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "openAiService",
                        "type": "OpenAiService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"row justify-content-center mt-5\">\n\n  <div class=\"col-12 col-lg-6\">\n    <form [formGroup]=\"coverLetterForm\" (ngSubmit)=\"getCoverLetter()\" class=\"row\">\n\n      <div class=\"col-12 my-2\">\n        <mat-form-field>\n          <mat-label>Company</mat-label>\n          <input formControlName=\"company\" matInput placeholder=\"Enter company name\">\n          <mat-hint>Enter the name of the company you are submitting your cover letter to.</mat-hint>\n          <mat-error *ngIf=\"hasError('company', 'required')\">This field is required.</mat-error>\n          <mat-error *ngIf=\"hasError('company', 'maxLength')\">Please enter no more than 25 characters.</mat-error>\n        </mat-form-field>\n      </div>\n\n      <div class=\"col-12 my-2\">\n        <mat-form-field>\n          <mat-label>Position</mat-label>\n          <input formControlName=\"position\" matInput placeholder=\"Enter position\">\n          <mat-hint>Enter the position you are applying for.</mat-hint>\n          <mat-error *ngIf=\"hasError('position', 'required')\">This field is required.</mat-error>\n          <mat-error *ngIf=\"hasError('position', 'maxLength')\">Please enter no more than 25 characters.</mat-error>\n        </mat-form-field>\n      </div>\n\n      <div class=\"col-12 my-2\">\n        <button class=\"btn btn-success float-end\" type=\"submit\" aria-label=\"Submit form\">Submit</button>\n      </div>\n\n    </form>\n\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <div class=\"callout callout-info\" *ngIf=\"!loadingInProgress; else spinner\">\n          {{coverLetterText}}\n        </div>\n        <ng-template #spinner>\n          <div class=\"row justify-content-center\">\n            <div class=\"col-12\">\n              <p>Your Cover Letter is being generated. It might take a minute or so. Thank you for your patience!</p>\n            </div>\n            <div class=\"col-2\">\n              <mat-spinner></mat-spinner>\n            </div>\n          </div>\n        </ng-template>\n      </div>\n    </div>\n\n  </div>\n</div>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-cad94b233ec8e80ceb541e7972c5f9737e08237b4e137112f3987ca48ee0cce5c0d57798d41daa5d4d24d6bdbb2df1606ab68cca2aa0a1785e38f99f3cac0729",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"storybook-header\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            [primary]=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 78,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonComponent } from './button.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-header',\n  standalone: true,\n  imports: [CommonModule, ButtonComponent],\n  template: `<header>\n    <div class=\"storybook-header\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            [primary]=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-header {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.storybook-header svg {\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header h1 {\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header button + button {\n  margin-left: 10px;\n}\n\n.storybook-header .welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "HomePageComponent",
            "id": "component-HomePageComponent-9df5edaeafd7747f0750eb15a66720f13f1c3a6ef78686de76de031e26b8b44e12f89e5bc0af665e185bbf01bb501cbcfb52c1ea88543af88164ed9a2054ef82",
            "file": "src/app/core/components/home-page/home-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "demo-home-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./home-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'demo-home-page',\n  templateUrl: './home-page.component.html'\n})\nexport class HomePageComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"row justify-content-center mt-5\">\n  <div class=\"col-12 col-lg-6\">\n    <h1>Welcome!</h1>\n  </div>\n</div>\n<div class=\"row justify-content-center\">\n  <div class=\"col-12 col-lg-6\">\n    <h2>My name is Nataliia Sukhinina.</h2>\n    <p>I am a Frontend Developer with 7 years of experience in Angular.</p>\n    <p>I have a strong understanding of the Angular framework. I am proficient in a variety of Angular features, including pipes, validators, interceptors, and routing. I am also experienced in working with a variety of Angular libraries and tools such as Angular Material and AG Grid.</p>\n    <p>In my previous roles I was responsible for the development and maintenance of a variety of Angular applications. I have experience developing applications from scratch and working with a team to improve existing applications.</p>\n    <p>I am a curious and self-motivated learner who is able to learn new skills quickly and effectively. Right now my areas of interest are AWS and AI.</p>\n    <p class=\"lead\"> In fact, this cover letter was written with the help of one of the AI chats.</p>\n    <p>With my web application, you can <b>generate your own cover letter</b> for a specific company and position you are applying for. Click on Create Cover Letter at the top and try it out!</p>\n  </div>\n</div>\n"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-8a9234f113216b00f451d92a86c5f52721a0084a1cd54285716dd331d7738425fa87334437e9313b90b8651c6d86e158f024e28b2b394405c1dd8f781f16c506",
            "file": "src/app/core/components/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [
                "./login.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "hideConfirmPassword",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "hidePassword",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "loginForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "hasError",
                    "args": [
                        {
                            "name": "control",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "errorCode",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "control",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "errorCode",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onFormSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {MatchingFieldsValidator} from \"../../validators/matching-fields.validator\";\nimport {Router} from \"@angular/router\";\nimport {AuthService} from \"../../services/auth.service\";\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit{\n\n  loginForm!: FormGroup;\n  hidePassword: boolean = true;\n  hideConfirmPassword: boolean = true;\n  loading: boolean = false;\n\n  constructor(private formBuilder: FormBuilder,\n              private router: Router,\n              private authService: AuthService) {\n  }\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      username: ['', {\n        validators: [Validators.required, Validators.pattern('^[a-zA-Z ]*$')],\n        updateOn: 'submit'\n      }],\n      password: ['', {\n        validators: [Validators.required],\n        updateOn: 'blur'\n      }],\n      confirmPassword: ['', {\n        validators: [Validators.required],\n        updateOn: 'blur'\n      }]\n    }, {\n      validators: [MatchingFieldsValidator()]\n    });\n  }\n\n  onFormSubmit(): void {\n    if(!this.loading) {\n      this.loading = true;\n      this.loginForm.markAllAsTouched();\n      if(this.loginForm.valid) {\n        const username = this.loginForm.get('username')?.value;\n        const password = this.loginForm.get('password')?.value;\n        this.authService.signIn(username, password).subscribe(\n          (response) => {\n          },\n          (error) => {\n            this.loading = false;\n            console.log(error)\n          },\n          () => {\n            this.loading = false;\n            this.router.navigate(['/home']);\n          }\n        );\n      }\n\n    }\n\n  }\n\n  hasError(control: string, errorCode: string): boolean {\n    return !!(this.loginForm.get(control)?.touched && this.loginForm.get(control)?.hasError(errorCode));\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./login.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"row justify-content-center mt-5\">\n  <div class=\"col-12 col-lg-6\">\n    <div class=\"alert alert-info\">\n      <p><mat-icon class=\"align-bottom\">info</mat-icon> This form was created as a Reactive Angular Form. It implements built-in and custom validators.</p>\n    </div>\n  </div>\n</div>\n<div class=\"row justify-content-center align-middle mt-5\">\n  <div class=\"col-12\">\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onFormSubmit()\" class=\"row\">\n\n      <div class=\"col-11 my-2\">\n\n        <mat-form-field>\n          <mat-label>Username</mat-label>\n          <input formControlName=\"username\" matInput placeholder=\"Enter username\">\n          <mat-icon matSuffix>person</mat-icon>\n          <mat-hint>Please enter your username (letters only).</mat-hint>\n          <mat-error *ngIf=\"hasError('username', 'required')\">This field is required.</mat-error>\n          <mat-error *ngIf=\"hasError('username', 'pattern')\">This field can only accept letters.</mat-error>\n        </mat-form-field>\n\n      </div>\n      <div class=\"col-1\">\n        <button mat-icon-button\n                matTooltip=\"This field is required and restricted to accept letters only. Validation update happens only after the user submits the form. Different validation error messages are shown depending on what validation requirement was not met.\"\n                aria-label=\"Icon that displays a tooltip wth the field description\">\n          <mat-icon>info</mat-icon>\n        </button>\n      </div>\n\n      <div class=\"col-11 my-2\">\n        <mat-form-field>\n          <mat-label>Password</mat-label>\n          <input formControlName=\"password\" matInput placeholder=\"Enter password\" [type]=\"hidePassword ? 'password' : 'text'\">\n          <button mat-icon-button matSuffix (click)=\"hidePassword = !hidePassword\">\n            <mat-icon>{{hidePassword ? 'visibility_off' : 'visibility'}}</mat-icon>\n          </button>\n          <mat-hint>Message me on <a href=\"https://www.linkedin.com/in/natashasukhinina/\" target=\"_blank\">LinkedIn</a> to get the password.</mat-hint>\n          <mat-error *ngIf=\"hasError('password', 'required')\">This field is required.</mat-error>\n        </mat-form-field>\n      </div>\n\n      <div class=\"col-1\">\n        <button mat-icon-button\n                matTooltip=\"This field is required and can accept any character. Validation update happens when the user clicks outside the field.\"\n                aria-label=\"Icon that displays a tooltip wth the field description\">\n          <mat-icon>info</mat-icon>\n        </button>\n      </div>\n\n      <div class=\"col-11 my-2\">\n        <mat-form-field>\n          <mat-label>Confirm Password</mat-label>\n          <input formControlName=\"confirmPassword\" matInput placeholder=\"Confirm password\" [type]=\"hideConfirmPassword ? 'password' : 'text'\">\n          <button mat-icon-button matSuffix (click)=\"hideConfirmPassword = !hideConfirmPassword\">\n            <mat-icon>{{hideConfirmPassword ? 'visibility_off' : 'visibility'}}</mat-icon>\n          </button>\n          <mat-hint>Please enter the password one more time.</mat-hint>\n          <mat-error *ngIf=\"hasError('confirmPassword', 'required')\">This field is required.</mat-error>\n        </mat-form-field>\n      </div>\n\n      <div class=\"col-1\">\n        <button mat-icon-button\n                matTooltip=\"This field is required. Validation update happens when the user clicks outside the field. Custom validator was created for this field to check if it matches the Password field.\"\n                aria-label=\"Icon that displays a tooltip wth the field description\">\n          <mat-icon>info</mat-icon>\n        </button>\n      </div>\n\n      <div class=\"col-12 my-2\" *ngIf=\"loginForm.hasError('noMatch')\">\n        <div class=\"alert alert-danger\">\n          <p>The Password and Confirm Password fields do not match. Please re-enter and try again.</p>\n        </div>\n      </div>\n\n      <div class=\"col-12 my-2\">\n        <button class=\"btn btn-success float-end\" type=\"submit\" aria-label=\"Submit form\">Submit</button>\n      </div>\n    </form>\n\n    <div class=\"row justify-content-center\" *ngIf=\"loading\">\n      <div class=\"col-2\">\n        <mat-spinner></mat-spinner>\n      </div>\n    </div>\n\n  </div>\n</div>\n"
        },
        {
            "name": "LoginHelpComponent",
            "id": "component-LoginHelpComponent-9c394ce7dea74425881a28cc260a4c0cb8534f18a723f3c828cfc594063c53fc9406d3eec1a12294b2c1d344639875aa2599f5b6daf420c01352a0121ea2688b",
            "file": "src/app/public/login-help/components/login-help/login-help.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "demo-login-help",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./login-help.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "showChatHistory",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onChatHistoryToggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgIf"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { NgIf } from '@angular/common';\r\nimport { getShowChatHistory } from '../../state/login-help.selectors';\r\nimport { State } from '../../state/login-help.model';\r\nimport * as LoginHelpActions from  '../../state/login-help.actions';\r\n\r\n@Component({\r\n  selector: 'demo-login-help',\r\n  standalone: true,\r\n  imports: [\r\n    NgIf\r\n  ],\r\n  templateUrl: './login-help.component.html',\r\n  styleUrl: './login-help.component.css'\r\n})\r\nexport class LoginHelpComponent implements OnInit {\r\n\r\n  showChatHistory = false;\r\n\r\n  constructor(private store: Store<State>) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.store.select(getShowChatHistory).subscribe(\r\n      showChatHistory => {\r\n        this.showChatHistory = showChatHistory;\r\n      }\r\n    );\r\n  }\r\n\r\n  onChatHistoryToggle() {\r\n    this.store.dispatch(LoginHelpActions.toggleShowChatHistory());\r\n  }\r\n}\r\n",
            "styleUrl": "./login-help.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<State>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<State>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<form>\r\n  <input\r\n    type=\"checkbox\"\r\n    (change)=\"onChatHistoryToggle()\"\r\n    [checked]=\"showChatHistory\"\r\n  >\r\n  <label>Show chat history</label>\r\n</form>\r\n\r\n<ng-container *ngIf=\"showChatHistory\">\r\n  <h2>\r\n    Chat History\r\n  </h2>\r\n</ng-container>\r\n"
        },
        {
            "name": "NavigationComponent",
            "id": "component-NavigationComponent-708b1c217d50735c9958530302c330ed6904f391ffc78c5702358afb5700fb5dcd79ad52ddc54e49d4f2453928745e979425ae3edf9f2e302b60268a030ea3c9",
            "file": "src/app/shared/components/navigation/navigation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "demo-navigation",
            "styleUrls": [
                "./navigation.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./navigation.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../../core/services/auth.service';\n\n@Component({\n  selector: 'demo-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css'],\n})\nexport class NavigationComponent implements OnInit {\n  user: string = '';\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./navigation.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<ul class=\"nav nav-tabs justify-content-center\">\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" routerLink=\"home\" routerLinkActive=\"active\">Home</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" routerLink=\"cover-letter\" routerLinkActive=\"active\">Create Cover Letter</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" routerLink=\"app-features\" routerLinkActive=\"active\">App Features</a>\n  </li>\n</ul>\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-d32b0f19628254ea3fc5526c4d4564ada1cc83cf936759006d90a46f5874b02a3359e331bddda20b22e74a616a6443c660602ba74dd38ebe1160759e0de6f7ba",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section class=\"storybook-page\">\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 69
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HeaderComponent } from './header.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-page',\n  standalone: true,\n  imports: [CommonModule, HeaderComponent],\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section class=\"storybook-page\">\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-page {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\n.storybook-page h2 {\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-page p {\n  margin: 1em 0;\n}\n\n.storybook-page a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\n.storybook-page ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\n.storybook-page li {\n  margin-bottom: 8px;\n}\n\n.storybook-page .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\n.storybook-page .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\n.storybook-page .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\n.storybook-page .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": "",
            "extends": []
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-ba7eb676532d84e2bd9ee4e2b794a33f5c93ec7847e963242fc7eeef8f15df2b37982ba8754c381c10001bd8a177e4566d862a6dc9dfcd720a8d2dd70790eedd",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule, isDevMode } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport {CoreModule} from \"./core/core.module\";\nimport {AmplifyAuthenticatorModule} from \"@aws-amplify/ui-angular\";\nimport {Amplify} from \"aws-amplify\";\n// @ts-ignore\nimport awsconfig from '../aws-exports';\nimport {SharedModule} from \"./shared/shared.module\";\nimport { StoreModule } from '@ngrx/store';\nimport { LoginHelpModule } from './public/login-help/login-help.module';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\n\nAmplify.configure(awsconfig);\n\nconst featureModules = [\n  LoginHelpModule\n];\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    CoreModule,\n    AmplifyAuthenticatorModule,\n    SharedModule,\n    StoreModule.forRoot({}, {}),\n    ...featureModules,\n    StoreDevtoolsModule.instrument({ name: 'Cover Letter App', maxAge: 25, logOnly: !isDevMode() })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "CoreModule"
                        },
                        {
                            "name": "LoginHelpModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-a97beeb9329115e5a7e16b3430718061c93b781007bac47b87ff50d6f6838ef48aa937ddb00ee61cf7e57a9d9c03c5788d4e4f45349b6f7b4e3f0d8e22cdac4d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {LoginComponent} from \"./core/components/login/login.component\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/login',\n    pathMatch: 'full'\n  }, {\n    path: 'login',\n    component: LoginComponent\n  }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\n\nexport class AppRoutingModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CoreModule",
            "id": "module-CoreModule-55b6e13d0ae0ed73b29ad6e98ead922bbed17aa703c5895ee92a66cce54ff6fbf6715251672ca45c87bb9a7f0efb39278798a1ec21f09d25f42d234e9c2f8221",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/core/core.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './components/login/login.component';\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {MAT_FORM_FIELD_DEFAULT_OPTIONS, MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatDividerModule} from \"@angular/material/divider\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatListModule} from \"@angular/material/list\";\nimport {MatTooltipModule} from \"@angular/material/tooltip\";\nimport { HomePageComponent } from './components/home-page/home-page.component';\nimport {CoreRoutingModule} from \"./core-routing.module\";\nimport {SharedModule} from \"../shared/shared.module\";\nimport { CoverLetterComponent } from './components/cover-letter/cover-letter.component';\nimport { HTTP_INTERCEPTORS, provideHttpClient, withInterceptorsFromDi } from \"@angular/common/http\";\nimport {OpenAiInterceptor} from \"./interceptors/open-ai.interceptor\";\nimport {MatProgressSpinnerModule} from \"@angular/material/progress-spinner\";\nimport { AppFeaturesComponent } from './components/app-features/app-features.component';\n\n\n\n@NgModule({ declarations: [\n        LoginComponent,\n        HomePageComponent,\n        CoverLetterComponent,\n        AppFeaturesComponent\n    ], imports: [CommonModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatIconModule,\n        MatInputModule,\n        MatDividerModule,\n        MatButtonModule,\n        MatListModule,\n        MatTooltipModule,\n        CoreRoutingModule,\n        SharedModule,\n        MatProgressSpinnerModule], providers: [\n        { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'outline' } },\n        { provide: HTTP_INTERCEPTORS, useClass: OpenAiInterceptor, multi: true },\n        provideHttpClient(withInterceptorsFromDi())\n    ] })\nexport class CoreModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "OpenAiInterceptor"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppFeaturesComponent"
                        },
                        {
                            "name": "CoverLetterComponent"
                        },
                        {
                            "name": "HomePageComponent"
                        },
                        {
                            "name": "LoginComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CoreRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CoreRoutingModule",
            "id": "module-CoreRoutingModule-b6d305836a2c4bf24a1c7ab144b1f09aeafe5893a79a2dc7756afa27eec73c1147609425c621f9911c792cdf164d3231fb4af19889fa207f12462febe27bc8c5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/core/core-routing.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {HomePageComponent} from \"./components/home-page/home-page.component\";\nimport {authGuard} from \"./guards/auth.guard\";\nimport {AuthService} from \"./services/auth.service\";\nimport {CoverLetterComponent} from \"./components/cover-letter/cover-letter.component\";\nimport {AppFeaturesComponent} from \"./components/app-features/app-features.component\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/login',\n    pathMatch: 'full'\n  }, {\n    path: 'home',\n    component: HomePageComponent,\n    canActivate: [authGuard]\n  }, {\n    path: 'cover-letter',\n    component: CoverLetterComponent,\n    canActivate: [authGuard]\n  }, {\n    path: 'app-features',\n    component: AppFeaturesComponent,\n    canActivate: [authGuard]\n  }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [\n    RouterModule\n  ],\n  providers: [\n    AuthService\n  ]\n})\n\nexport class CoreRoutingModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "AuthService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LoginHelpModule",
            "id": "module-LoginHelpModule-4e9d2e93785cd936cf3fa4362af2acae241fb8912e7079396ba0eca610f41eb68b86d0127db5110b349ae6eae221ee88e7a8b80dea9bbeaf7a38cef9922d37f7",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/public/login-help/login-help.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { LoginHelpRoutingModule } from './login-help-routing.module';\r\nimport { loginHelpReducer } from './state/login-help.reducer';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    LoginHelpRoutingModule,\r\n    StoreModule.forFeature('loginHelp', loginHelpReducer)\r\n  ]\r\n})\r\nexport class LoginHelpModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "LoginHelpRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LoginHelpRoutingModule",
            "id": "module-LoginHelpRoutingModule-6eefc0ec3d9810b944205b2c8cd8c3ad512bbcd8e9cf2ead59c6f1ac3a3b1622d2952c8259db8c747991e4802272cc0b585f5491b8f71e0084ab26f4f36b0b29",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/public/login-help/login-help-routing.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport { LoginHelpComponent } from './components/login-help/login-help.component';\n\nconst routes: Routes = [\n  {\n    path: 'login-help',\n    component: LoginHelpComponent\n  }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\n\nexport class LoginHelpRoutingModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedModule",
            "id": "module-SharedModule-cd4ab32618bd864d358dd0f9f11c7ab21fe32b449297e8e63214e0fbee4c3a0a487cebbd02bd5b82e23e02ba71c3bbad8b90edb9d3e76d7b0db8a4be3f02211a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/shared.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NavigationComponent } from './components/navigation/navigation.component';\nimport {RouterLink, RouterLinkActive} from \"@angular/router\";\n\n\n\n@NgModule({\n  declarations: [\n    NavigationComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterLinkActive,\n    RouterLink\n  ],\n  exports: [\n    NavigationComponent\n  ]\n})\nexport class SharedModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "NavigationComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "RouterLink"
                        },
                        {
                            "name": "RouterLinkActive"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "NavigationComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "appFeaturesList",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/components/app-features/app-features.constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AppFeature[]",
                "defaultValue": "[\n  {\n    header: 'AWS Amplify',\n    subHeader: 'Hosting, Authentication',\n    description: 'This application is hosted on AWS Amplify, which connects to the Git repository and allows for continuous deployment from the selected branch. AWS Amplify also provides authentication and user management services.'\n  }, {\n    header: 'OpenAI API',\n    subHeader: 'API Integration',\n    description: 'This application takes user input and sends it to OpenAI as part of a POST API request. The response is then displayed back to the user.'\n  }, {\n    header: 'API Key Storage',\n    subHeader: 'API Integration',\n    description: 'The OpenAI API key is stored securely in AWS managed service and is retrieved during deployment.'\n  }, {\n    header: 'Reactive Forms',\n    subHeader: 'Angular Framework',\n    description: 'This application uses Angular Reactive Forms to create forms, and a custom validator was created to enforce password matching.',\n    footnote: 'Use of built-in and custom validators'\n  }, {\n    header: 'Route Guard',\n    subHeader: 'Angular Framework, Authentication',\n    description: 'A route guard was implemented to prevent un-authenticated users from accessing some of the pages of the application.',\n  }, {\n    header: 'HTTP Interceptor',\n    subHeader: 'Angular Framework, API Integration',\n    description: 'An HTTP interceptor was created to add authentication headers to requests made to the OpenAI GPT-3.5 API.',\n  }, {\n    header: 'Angular Material and Bootstrap',\n    subHeader: 'Design',\n    description: 'The application\\'s page elements are implemented with Angular Material and Bootstrap.',\n  }\n]"
            },
            {
                "name": "authGuard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/guards/auth.guard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => {\n  const authService: AuthService = inject(AuthService);\n  const router: Router = inject(Router);\n\n  return authService.isAuthenticated()\n    .pipe(\n      tap(loggedIn => {\n        if (!loggedIn) {\n          router.navigate(['/login']);\n        }\n      })\n    );\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.development.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  // amplify: awsConfig,\n  openAiApiKey: '',\n  openAiOrganization: 'org-KOOCC1Ru8jtVOg1g6ycSKGpf',\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true,\n  // amplify: awsConfig,\n  openAiApiKey: '',\n  openAiOrganization: 'org-KOOCC1Ru8jtVOg1g6ycSKGpf',\n}"
            },
            {
                "name": "featureModules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  LoginHelpModule\n]"
            },
            {
                "name": "getShowChatHistory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/public/login-help/state/login-help.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\n  getShowChatHistoryState,\n  state => state.showChatHistory\n)"
            },
            {
                "name": "getShowChatHistoryState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/public/login-help/state/login-help.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<LoginHelpState>('loginHelp')"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/public/login-help/state/login-help.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "LoginHelpState",
                "defaultValue": "{\n  showChatHistory: true\n}"
            },
            {
                "name": "loginHelpReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/public/login-help/state/login-help.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer<LoginHelpState>(\n  initialState,\n  on(LoginHelpActions.toggleShowChatHistory, state => {\n    return {\n      ...state,\n      showChatHistory: !state.showChatHistory\n    };\n  })\n)"
            },
            {
                "name": "toggleShowChatHistory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/public/login-help/state/login-help.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  '[Login Help] Toggle show chat history'\n)"
            }
        ],
        "functions": [
            {
                "name": "MatchingFieldsValidator",
                "file": "src/app/core/validators/matching-fields.validator.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "ValidatorFn"
            }
        ],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/core/components/app-features/app-features.constants.ts": [
                {
                    "name": "appFeaturesList",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/components/app-features/app-features.constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppFeature[]",
                    "defaultValue": "[\n  {\n    header: 'AWS Amplify',\n    subHeader: 'Hosting, Authentication',\n    description: 'This application is hosted on AWS Amplify, which connects to the Git repository and allows for continuous deployment from the selected branch. AWS Amplify also provides authentication and user management services.'\n  }, {\n    header: 'OpenAI API',\n    subHeader: 'API Integration',\n    description: 'This application takes user input and sends it to OpenAI as part of a POST API request. The response is then displayed back to the user.'\n  }, {\n    header: 'API Key Storage',\n    subHeader: 'API Integration',\n    description: 'The OpenAI API key is stored securely in AWS managed service and is retrieved during deployment.'\n  }, {\n    header: 'Reactive Forms',\n    subHeader: 'Angular Framework',\n    description: 'This application uses Angular Reactive Forms to create forms, and a custom validator was created to enforce password matching.',\n    footnote: 'Use of built-in and custom validators'\n  }, {\n    header: 'Route Guard',\n    subHeader: 'Angular Framework, Authentication',\n    description: 'A route guard was implemented to prevent un-authenticated users from accessing some of the pages of the application.',\n  }, {\n    header: 'HTTP Interceptor',\n    subHeader: 'Angular Framework, API Integration',\n    description: 'An HTTP interceptor was created to add authentication headers to requests made to the OpenAI GPT-3.5 API.',\n  }, {\n    header: 'Angular Material and Bootstrap',\n    subHeader: 'Design',\n    description: 'The application\\'s page elements are implemented with Angular Material and Bootstrap.',\n  }\n]"
                }
            ],
            "src/app/core/guards/auth.guard.ts": [
                {
                    "name": "authGuard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/guards/auth.guard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => {\n  const authService: AuthService = inject(AuthService);\n  const router: Router = inject(Router);\n\n  return authService.isAuthenticated()\n    .pipe(\n      tap(loggedIn => {\n        if (!loggedIn) {\n          router.navigate(['/login']);\n        }\n      })\n    );\n}"
                }
            ],
            "src/environments/environment.development.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.development.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  // amplify: awsConfig,\n  openAiApiKey: '',\n  openAiOrganization: 'org-KOOCC1Ru8jtVOg1g6ycSKGpf',\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true,\n  // amplify: awsConfig,\n  openAiApiKey: '',\n  openAiOrganization: 'org-KOOCC1Ru8jtVOg1g6ycSKGpf',\n}"
                }
            ],
            "src/app/app.module.ts": [
                {
                    "name": "featureModules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  LoginHelpModule\n]"
                }
            ],
            "src/app/public/login-help/state/login-help.selectors.ts": [
                {
                    "name": "getShowChatHistory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/public/login-help/state/login-help.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\n  getShowChatHistoryState,\n  state => state.showChatHistory\n)"
                },
                {
                    "name": "getShowChatHistoryState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/public/login-help/state/login-help.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<LoginHelpState>('loginHelp')"
                }
            ],
            "src/app/public/login-help/state/login-help.reducer.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/public/login-help/state/login-help.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "LoginHelpState",
                    "defaultValue": "{\n  showChatHistory: true\n}"
                },
                {
                    "name": "loginHelpReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/public/login-help/state/login-help.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer<LoginHelpState>(\n  initialState,\n  on(LoginHelpActions.toggleShowChatHistory, state => {\n    return {\n      ...state,\n      showChatHistory: !state.showChatHistory\n    };\n  })\n)"
                }
            ],
            "src/app/public/login-help/state/login-help.actions.ts": [
                {
                    "name": "toggleShowChatHistory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/public/login-help/state/login-help.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  '[Login Help] Toggle show chat history'\n)"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/core/validators/matching-fields.validator.ts": [
                {
                    "name": "MatchingFieldsValidator",
                    "file": "src/app/core/validators/matching-fields.validator.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "ValidatorFn"
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "redirectTo": "/login",
                        "pathMatch": "full"
                    },
                    {
                        "path": "login",
                        "component": "LoginComponent"
                    }
                ],
                "kind": "module"
            },
            {
                "name": "routes",
                "filename": "src/app/core/core-routing.module.ts",
                "module": "CoreRoutingModule",
                "children": [
                    {
                        "path": "",
                        "redirectTo": "/login",
                        "pathMatch": "full"
                    },
                    {
                        "path": "home",
                        "component": "HomePageComponent",
                        "canActivate": [
                            "authGuard"
                        ]
                    },
                    {
                        "path": "cover-letter",
                        "component": "CoverLetterComponent",
                        "canActivate": [
                            "authGuard"
                        ]
                    },
                    {
                        "path": "app-features",
                        "component": "AppFeaturesComponent",
                        "canActivate": [
                            "authGuard"
                        ]
                    }
                ],
                "kind": "module"
            },
            {
                "name": "routes",
                "filename": "src/app/public/login-help/login-help-routing.module.ts",
                "module": "LoginHelpRoutingModule",
                "children": [
                    {
                        "path": "login-help",
                        "component": "LoginHelpComponent"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 4,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "featureModules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/components/app-features/app-features.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppFeaturesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/components/app-features/app-features.constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appFeaturesList",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/components/cover-letter/cover-letter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CoverLetterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/components/home-page/home-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomePageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/components/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/guards/auth.guard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "authGuard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/interceptors/open-ai.interceptor.ts",
                "type": "interceptor",
                "linktype": "interceptor",
                "name": "OpenAiInterceptor",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/AppFeature.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AppFeature",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthService",
                "coveragePercent": 55,
                "coverageCount": "5/9",
                "status": "good"
            },
            {
                "filePath": "src/app/core/services/open-ai.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OpenAiService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/validators/matching-fields.validator.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "MatchingFieldsValidator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/public/login-help/components/login-help/login-help.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginHelpComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/public/login-help/state/login-help.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "toggleShowChatHistory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/public/login-help/state/login-help.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "LoginHelpState",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/public/login-help/state/login-help.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "State",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/public/login-help/state/login-help.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/public/login-help/state/login-help.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loginHelpReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/public/login-help/state/login-help.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getShowChatHistory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/public/login-help/state/login-help.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getShowChatHistoryState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/navigation/navigation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavigationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/state/app.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "State",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.development.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}